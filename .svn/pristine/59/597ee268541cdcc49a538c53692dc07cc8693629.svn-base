<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.inogard.enio.agent.mappers.po.PoMapper">
  <sql id="sqlSelect">
    SELECT Count(*) over () filtered_count, 
           p.po_no, 
           p.ttl, 
           dbo.getStringToDateTime(p.po_ymd) AS po_ymd,  
           p.po_amt, 
           p.vat_amt, 
           p.pr_typecd, 
           p.tax_typecd, 
           p.io_flag, 
           dbo.getStringToDateTime(p.dlv_fr_ymd) AS dlv_fr_ymd, 
           dbo.getStringToDateTime(p.dlv_to_ymd) AS dlv_to_ymd,
           p.dlv_loc, 
           dbo.getStringToDateTime(p.dlv_req_ymd) AS dlv_req_ymd, 
           p.dlv_cond_rmrk, 
           p.pay_cond_rmrk, 
           p.po_rmrk, 
           p.prepay_insr_yn, 
           p.prepay_amt, 
           p.prfm_insr_yn, 
           p.prfm_insr_rate, 
           p.prfm_insr_amt, 
           p.flaw_insr_yn, 
           p.flaw_insr_rate, 
           p.flaw_insr_year, 
           p.delay_rate_yn, 
           p.delay_rate, 
           p.delay_max_rate, 
           p.po_doc_kind, 
           p.offline_yn, 
           p.chrg_usrcd, 
           p.chrg_deptcd, 
           p.po_st, 
           dbo.getStringToDateTime(p.reg_dt) AS reg_dt, 
           p.org_bsn_no, 
           p.org_nm, 
           p.org_ceo_nm, 
           p.org_main_tel, 
           p.org_main_fax, 
           p.org_main_email, 
           p.org_uptae_nm, 
           p.org_upjong_nm, 
           p.org_zip_cd, 
           p.org_addr, 
           p.cus_bsn_no, 
           p.cus_nm, 
           p.cus_ceo_nm, 
           p.cus_main_tel, 
           p.cus_main_fax, 
           p.cus_main_email, 
           p.cus_uptae_nm, 
           p.cus_upjong_nm, 
           p.cus_zip_cd, 
           p.cus_addr, 
           p.cus_cd, 
           p.crcy_cd, 
           p.crcy_rate, 
           dbo.getStringToDateTime(p.e4u_if_dt) AS e4u_if_dt,
           p.erp_sync_yn, 
           p.erp_sync_dt, 
           p.erp_po_no, 
           p.rfq_no 
    FROM   agt_po p
  </sql>
  
  <select id="findByPoNo" resultType="po">
    <include refid="sqlSelect"/>
    <![CDATA[
      WHERE  p.po_no = #{poNo}
    ]]>
  </select>
  
  <select id="findAll" resultType="po">
    SELECT Z.*
    FROM (
      SELECT ROW_NUMBER() OVER(
                                                      <choose>
                                                        <when test="pageable != null and pageable.sort != null">
                                                          <foreach item="order" collection="pageable.sort" open="ORDER BY " separator=",">
                                                            ${order.property} ${order.direction}
                                                          </foreach>
                                                        </when>
                                                        <otherwise>
                                                          ORDER BY reg_dt DESC
                                                        </otherwise>
                                                      </choose>
                                                    ) AS RNUM
               ,  X.*
      FROM (
        <include refid="sqlSelect"/>
        <where>
          <if test="search != null">
            <if test="search.value != null and search.value != ''">
            <![CDATA[
            (
              p.po_no like '%'||#{search.value}||'%'
              or p.ttl like '%'||#{search.value}||'%'
              or p.erp_po_no like '%'||#{search.value}||'%'
            )
            ]]>
            </if>
          </if>
        </where>
      ) X
    ) Z
    <if test="pageable != null">
    <![CDATA[
            WHERE Z.RNUM BETWEEN ( #{pageable.page} * #{pageable.size} + 1 ) AND ( (#{pageable.page} + 1) * #{pageable.size} )
    ]]>
    </if>
  </select>

  <select id="count" resultType="long">
  <![CDATA[
    SELECT count(*)
    FROM agt_po
  ]]>
  </select>

  <insert id="add" parameterType="po">
  <![CDATA[
		INSERT INTO agt_po (
      po_no, 
      ttl, 
      po_ymd, 
      po_amt, 
      vat_amt, 
      pr_typecd, 
      tax_typecd, 
      io_flag, 
      chrg_usrcd, 
      chrg_deptcd, 
      org_bsn_no, 
      org_nm, 
      org_ceo_nm, 
      org_main_tel, 
      org_main_fax, 
      org_main_email, 
      org_uptae_nm, 
      org_upjong_nm, 
      org_zip_cd, 
      org_addr, 
      cus_cd, 
      cus_bsn_no, 
      cus_nm, 
      cus_ceo_nm, 
      cus_main_tel, 
      cus_main_fax, 
      cus_main_email, 
      cus_uptae_nm, 
      cus_upjong_nm, 
      cus_zip_cd, 
      cus_addr, 
      crcy_cd, 
      crcy_rate, 
      dlv_fr_ymd, 
      dlv_to_ymd, 
      dlv_loc, 
      dlv_req_ymd, 
      prepay_insr_yn, 
      prepay_amt, 
      prfm_insr_yn, 
      prfm_insr_rate, 
      prfm_insr_amt, 
      flaw_insr_yn, 
      flaw_insr_rate, 
      flaw_insr_year, 
      delay_rate_yn, 
      delay_rate, 
      delay_max_rate, 
      dlv_cond_rmrk, 
      pay_cond_rmrk, 
      po_doc_kind, 
      offline_yn, 
      po_rmrk, 
      reg_dt, 
      po_st, 
      rfq_no, 
      e4u_if_dt
    ) VALUES (
      #{poNo}, 
      #{ttl}, 
      CONVERT(CHAR(8), #{poYmd}, 112), 
      #{poAmt}, 
      #{vatAmt}, 
      #{prTypecd}, 
      #{taxTypecd}, 
      #{ioFlag}, 
      #{chrgUsrcd}, 
      #{chrgDeptcd}, 
      #{orgBsnNo}, 
      #{orgNm}, 
      #{orgCeoNm}, 
      #{orgMainTel}, 
      #{orgMainFax}, 
      #{orgMainEmail}, 
      #{orgUptaeNm}, 
      #{orgUpjongNm}, 
      #{orgZipCd}, 
      #{orgAddr}, 
      #{cusCd}, 
      #{cusBsnNo}, 
      #{cusNm}, 
      #{cusCeoNm}, 
      #{cusMainTel}, 
      #{cusMainFax}, 
      #{cusMainEmail}, 
      #{cusUptaeNm}, 
      #{cusUpjongNm}, 
      #{cusZipCd}, 
      #{cusAddr}, 
      #{crcyCd}, 
      #{crcyRate}, 
      CONVERT(CHAR(8), #{dlvFrYmd}, 112), 
      CONVERT(CHAR(8), #{dlvToYmd}, 112), 
      #{dlvLoc}, 
      CONVERT(CHAR(8), #{dlvReqYmd}, 112), 
      #{prepayInsrYn}, 
      #{prepayAmt}, 
      #{prfmInsrYn}, 
      #{prfmInsrRate}, 
      #{prfmInsrAmt}, 
      #{flawInsrYn}, 
      #{flawInsrRate}, 
      #{flawInsrYear}, 
      #{delayRateYn}, 
      #{delayRate}, 
      #{delayMaxRate}, 
      #{dlvCondRmrk}, 
      #{payCondRmrk}, 
      #{poDocKind}, 
      #{offlineYn}, 
      #{poRmrk}, 
      CONVERT(CHAR(8), #{regDt}, 112) + REPLACE(CONVERT(CHAR(8), #{regDt}, 114), ':', ''), 
      #{poSt}, 
      #{rfqNo}, 
      CONVERT(CHAR(8), GETDATE(), 112) + REPLACE(CONVERT(CHAR(8), GETDATE(), 114), ':', '')
    ) 
	]]>
  </insert>

  <update id="updatePoNoInPrItem" parameterType="string">
  <![CDATA[
      UPDATE   A
             SET   A.po_no = #{poNo}
          FROM  agt_pritem A
          JOIN    agt_poitem B ON B.pr_no = A.pr_no
                                        AND B.pr_item_seq = A.item_seq
       WHERE  B.po_no = #{poNo}
  ]]>
  </update>
  
  <update id="updateCallSyncToErp" parameterType="hashmap" statementType="CALLABLE" >
  <![CDATA[
    { call DSADM.P_APC_CONTR_REVE( #{rfqNo, mode=IN, jdbcType=VARCHAR}, #{outCd, mode=OUT, jdbcType=VARCHAR}, #{outMsg, mode=OUT, jdbcType=VARCHAR}) }
  ]]>
  </update>
</mapper>