<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.inogard.enio.agent.mappers.pr.PrDumMapper">
  <sql id="sqlSelect">
    SELECT COUNT(*) OVER () filtered_count,
           dp.erp_pr_no, 
           dp.ttl, 
           dp.pr_typecd, 
           dp.tax_typecd, 
           dp.io_flag, 
           dbo.getStringToDateTime(dp.dlv_fr_ymd) AS dlv_fr_ymd,  
           dbo.getStringToDateTime(dp.dlv_to_ymd) AS dlv_to_ymd, 
           dp.dlv_loc,
           dbo.getStringToDateTime(dp.dlv_req_ymd) AS dlv_req_ymd, 
           dp.spot_dscr_yn, 
           dbo.getStringToDateTime(dp.spot_dscr_dt) AS spot_dscr_dt, 
           dp.spot_dscr_usrnm, 
           dp.spot_dscr_usrtel, 
           dp.spot_dscr_loc, 
           dp.req_usr_nm, 
           dp.req_usr_tel, 
           gmUser.e4u_user_cd AS gm_chrgr_cd, 
           prUser.e4u_user_cd AS pr_chrgr_cd, 
           grUser.e4u_user_cd AS gr_chrgr_cd, 
           chkUser.e4u_user_cd AS chk_chrgr_cd, 
           dbo.getStringToDateTime(dp.reg_dt) AS reg_dt, 
           dp.pr_rmrk, 
           dp.prebid_yn, 
           dbo.getStringToDateTime(dp.e4u_if_dt) AS e4u_if_dt,
           dp.e4u_if_st, 
           dp.e4u_pr_no, 
           dp.erp_rfq_no, 
           dp.bid_sub_typecd, 
           dp.bid_typecd, 
           dp.cncl_flag, 
           dbo.getStringToDateTime(dp.cncl_req_dt)	AS cncl_req_dt,
           dbo.getStringToDateTime(dp.cncl_rslt_dt) AS cncl_rslt_dt,
           dp.cncl_rslt_msg,
           dp.selected_bidder_std,
           dp.bidder_rate,
           dbo.getStringToDateTime(dp.bid_expire_dt) AS bid_expire_dt,
           dp.rfqdoc_yn,
           dbo.getStringToDateTime(dp.rfqdoc_expire_dt) AS rfqdoc_expire_dt,
           dp.rfqdoc_rmrk,
           dp.techdoc_yn,
           dbo.getStringToDateTime(dp.techdoc_expire_dt) AS techdoc_expire_dt,
           dp.techdoc_rmrk,
           dp.constr_period_inpt_kind,
           dp.constr_period_rmrk
    FROM   agt_dum_pr dp 
           LEFT JOIN agt_dum_user gmUser
                  ON( dp.gm_chrgr_cd = gmUser.erp_user_cd ) 
           LEFT JOIN agt_dum_user prUser 
                  ON( dp.pr_chrgr_cd = prUser.erp_user_cd ) 
           LEFT JOIN agt_dum_user grUser 
                  ON( dp.gr_chrgr_cd = grUser.erp_user_cd ) 
           LEFT JOIN agt_dum_user chkUser
                  ON( dp.chk_chrgr_cd = chkUser.erp_user_cd )  
  </sql>

  <select id="findByErpPrNo" parameterType="string" resultType="kr.co.inogard.enio.agent.domain.pr.PrDum">
    <include refid="sqlSelect"/>
    <![CDATA[
      WHERE  dp.erp_pr_no = #{value}
    ]]>
  </select>

  <select id="findAllNotSend" resultType="kr.co.inogard.enio.agent.domain.pr.PrDum">
    <include refid="sqlSelect"/>
    <![CDATA[
      WHERE  dp.e4u_pr_no IS NULL
      AND dp.e4u_if_st = 'SR'
      AND dp.cncl_flag IS NULL
    ]]>
  </select>

  <select id="findAllReqCancelNotSend" resultType="kr.co.inogard.enio.agent.domain.pr.PrDum">
    <include refid="sqlSelect"/>
    <![CDATA[
      WHERE dp.cncl_flag = 'CR' 
    ]]>
  </select>

  <select id="findAll" resultType="kr.co.inogard.enio.agent.domain.pr.PrDum">
    SELECT Z.*
    FROM (
      SELECT ROW_NUMBER() OVER(
                                                      <choose>
                                                        <when test="pageable != null and pageable.sort != null">
                                                          <foreach item="order" collection="pageable.sort" open="ORDER BY " separator=",">
                                                            ${order.property} ${order.direction}
                                                          </foreach>
                                                        </when>
                                                        <otherwise>
                                                          ORDER BY reg_dt DESC
                                                        </otherwise>
                                                      </choose>
                                                    ) AS RNUM
               ,  X.*
      FROM (
        <include refid="sqlSelect"/>
        <where>
          <if test="search != null">
            <if test="search.value != null and search.value != ''">
            <![CDATA[
            (
              dp.erp_pr_no like '%'||#{search.value}||'%'
              or dp.ttl like '%'||#{search.value}||'%'
              or dp.e4u_pr_no like '%'||#{search.value}||'%'
            )
            ]]>
            </if>
            <if test="search.e4uIfSt != null and search.e4uIfSt != ''">
            <![CDATA[
              AND dp.e4u_if_st = #{search.e4uIfSt}
            ]]>
            </if>
          </if>
        </where>
      ) X
    ) Z
    <if test="pageable != null">
    <![CDATA[
        WHERE Z.RNUM BETWEEN ( #{pageable.page} * #{pageable.size} + 1 ) AND ( (#{pageable.page} + 1) * #{pageable.size} )
    ]]>
    </if>
  </select>

  <select id="count" resultType="long">
  <![CDATA[
    SELECT count(*)
    FROM agt_dum_pr
  ]]>
  </select>

  <insert id="add" parameterType="kr.co.inogard.enio.agent.domain.pr.PrDum">
  <![CDATA[
	  INSERT INTO agt_dum_pr (
	    erp_pr_no, 
	    ttl, 
	    pr_typecd, 
	    tax_typecd, 
	    io_flag, 
	    gm_chrgr_cd, 
	    pr_chrgr_cd, 
	    gr_chrgr_cd, 
	    chk_chrgr_cd, 
	    dlv_fr_ymd, 
	    dlv_to_ymd, 
	    req_usr_nm, 
	    req_usr_tel, 
	    reg_dt, 
	    pr_rmrk, 
	    dlv_loc, 
	    dlv_req_ymd, 
	    spot_dscr_yn, 
	    spot_dscr_dt, 
	    spot_dscr_usrnm, 
	    spot_dscr_usrtel, 
	    spot_dscr_loc,
	    bid_sub_typecd,
	    bid_typecd, 
	    prebid_yn
	  ) VALUES (
	    #{erpPrNo}, 
	    #{ttl}, 
	    #{prTypecd}, 
	    #{taxTypecd}, 
	    #{ioFlag}, 
	    NULL , 
	    NULL , 
	    NULL , 
	    NULL , 
	    NULL, 
	    NULL, 
	    #{reqUsrNm}, 
	    #{reqUsrTel}, 
	    CONVERT(CHAR(8), GETDATE(), 112) + REPLACE(CONVERT(CHAR(8), GETDATE(), 114), ':', ''), 
	    #{prRmrk}, 
	    #{dlvLoc}, 
	    CONVERT(CHAR(8), #{dlvReqYmd}, 112), 
	    #{spotDscrYn}, 
        CONVERT(CHAR(8), #{spotDscrDt}, 112) + REPLACE(CONVERT(CHAR(8), #{spotDscrDt}, 114), ':', ''),
	    #{spotDscrUsrnm}, 
	    #{spotDscrUsrtel}, 
	    #{spotDscrLoc},
	    #{bidSubTypecd},
	    #{bidTypecd},
	    #{prebidYn}
	  )      
  ]]>
  </insert>

  <update id="updateGmChrgrCd" parameterType="kr.co.inogard.enio.agent.domain.pr.PrDum">
	<![CDATA[
		UPDATE agt_dum_pr 
    SET    gm_chrgr_cd = #{gmChrgrCd} 
    WHERE  erp_pr_no = #{erpPrNo}
	]]>
  </update>

  <update id="updatePrChrgrCd" parameterType="kr.co.inogard.enio.agent.domain.pr.PrDum">
  <![CDATA[
		UPDATE agt_dum_pr 
		SET    pr_chrgr_cd = #{prChrgrCd} 
		WHERE  erp_pr_no = #{erpPrNo} 
	]]>
  </update>

  <update id="updateGrChrgrCd" parameterType="kr.co.inogard.enio.agent.domain.pr.PrDum">
  <![CDATA[
		UPDATE agt_dum_pr 
		SET    gr_chrgr_cd = #{grChrgrCd} 
		WHERE  erp_pr_no = #{erpPrNo} 
	]]>
  </update>

  <update id="updateChkChrgrCd" parameterType="kr.co.inogard.enio.agent.domain.pr.PrDum">
  <![CDATA[
		UPDATE agt_dum_pr 
		SET    chk_chrgr_cd = #{chkChrgrCd} 
		WHERE  erp_pr_no = #{erpPrNo} 
	]]>
  </update>

  <update id="updateE4uPrNo" parameterType="kr.co.inogard.enio.agent.domain.pr.PrDum">
  <![CDATA[
		UPDATE agt_dum_pr 
		SET    e4u_pr_no = #{e4uPrNo}, 
		       e4u_if_dt = CONVERT(CHAR(8), GETDATE(), 112) + REPLACE(CONVERT(CHAR(8), GETDATE(), 114), ':', '') 
		WHERE  erp_pr_no = #{erpPrNo} 
  ]]>
  </update>

  <update id="updateE4uIfSt" parameterType="kr.co.inogard.enio.agent.domain.pr.PrDum">
  <![CDATA[
    UPDATE agt_dum_pr 
    SET    e4u_if_st = #{e4uIfSt}, 
           e4u_if_dt = CONVERT(CHAR(8), GETDATE(), 112) + REPLACE(CONVERT(CHAR(8), GETDATE(), 114), ':', '') 
    WHERE  erp_pr_no = #{erpPrNo} 
  ]]>
  </update>

  <update id="updateCnclFlag" parameterType="kr.co.inogard.enio.agent.domain.pr.PrDum">
  <![CDATA[
    UPDATE agt_dum_pr 
    SET    cncl_flag = #{cnclFlag}, 
           cncl_req_dt = CONVERT(CHAR(8), #{cnclReqDt}, 112) + REPLACE(CONVERT(CHAR(8), #{cnclReqDt}, 114), ':', ''), 
           cncl_rslt_dt = CONVERT(CHAR(8), #{cnclRsltDt}, 112) + REPLACE(CONVERT(CHAR(8), #{cnclRsltDt}, 114), ':', ''), 
           cncl_rslt_msg = #{cnclRsltMsg} 
    WHERE  erp_pr_no = #{erpPrNo} 
  ]]>
  </update>

  <delete id="deleteByErpPrNo" parameterType="String">
  <![CDATA[
    DELETE FROM agt_dum_pr 
    WHERE erp_pr_no = #{value} 
  ]]>
  </delete>
</mapper>